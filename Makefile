#───────────── Compiler / Flags ─────────────
CXX       := g++
CXXFLAGS  := -std=c++17 -Wall -Wextra -O2 -MMD -MP
INC_DIRS  := -Isrc               # header search path

#───────────── Layout ─────────────
OBJ_DIR   := makemagic/obj
BIN_DIR   := makemagic/bin
COMMON_SRC:= src/data.cpp src/tree_utils.cpp

#───────────── BST target ─────────────
BST_SRC   := $(COMMON_SRC) \
             src/bst/bst.cpp \
             src/bst/main_bst.cpp
BST_OBJ   := $(patsubst src/%.cpp,$(OBJ_DIR)/%.o,$(BST_SRC))
BST_BIN   := $(BIN_DIR)/bst

#create list of dependency files generated by -MMD
DEPS      := $(BST_OBJ:.o=.d)

#disable built-in suffix rules to avoid the clash
.SUFFIXES:

#───────────── Default target ─────────────
all: $(BST_BIN)

#pattern rule: *.cpp  →  $(OBJ_DIR)/*.o (and *.d via -MMD)
$(OBJ_DIR)/%.o: src/%.cpp
	@mkdir -p $(@D)
	$(CXX) $(CXXFLAGS) $(INC_DIRS) -c $< -o $@

$(BST_BIN): $(BST_OBJ)
	@mkdir -p $(@D)
	$(CXX) $(CXXFLAGS) $^ -o $@

#───────────── Convenience targets ─────────────
run-bst: $(BST_BIN)
	$< search 10 data

#───────────── AVL target ─────────────
AVL_SRC   := $(COMMON_SRC) \
             src/avl/avl.cpp \
             src/avl/main_avl.cpp
AVL_OBJ   := $(patsubst src/%.cpp,$(OBJ_DIR)/%.o,$(AVL_SRC))
AVL_BIN   := $(BIN_DIR)/avl

# add AVL dependency files to the list generated by -MMD
DEPS     += $(AVL_OBJ:.o=.d)

# build the AVL executable (re-uses the generic %.o rule above)
$(AVL_BIN): $(AVL_OBJ)
	@mkdir -p $(@D)
	$(CXX) $(CXXFLAGS) $^ -o $@

#───────────── Convenience targets ─────────────
run-avl: $(AVL_BIN)
	$< search 10 data   # same CLI pattern as run-bst

.PHONY: run-avl

#───────────── Clean target ─────────────
clean:
	rm -rf $(OBJ_DIR) $(BIN_DIR)

.PHONY: all run-bst clean

#───────────── Auto-dependencies ─────────────
-include $(DEPS)
